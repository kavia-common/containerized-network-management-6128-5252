{"is_source_file": true, "format": "Python", "description": "This file defines a custom exception class 'ApiError' for handling API-related errors, and a function 'register_error_handlers' which registers various Flask error handlers for handling specific HTTP errors and exceptions, returning JSON responses.", "external_files": ["flask", "typing"], "external_methods": ["flask.jsonify"], "published": ["ApiError", "register_error_handlers"], "classes": [{"name": "ApiError", "description": "Custom exception class for API errors with status code, message, and optional details."}], "methods": [{"name": "register_error_handlers(app)", "description": "Registers error handlers for ApiError, 404, 400, and generic Exceptions on a Flask app instance.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, status: int, message: str, details: Optional[str] = None)", "scope": "ApiError", "scopeKind": "class", "description": "unavailable"}, {"name": "handle_400(_)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "handle_404(_)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "handle_api_error(err: ApiError)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "handle_generic(err: Exception)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}], "calls": ["flask.jsonify", "super().__init__"], "search-terms": ["ApiError", "register_error_handlers", "errorhandler", "jsonify", "Flask error handling", "custom API errors"], "state": 2, "file_id": 16, "knowledge_revision": 39, "git_revision": "", "ctags": [{"_type": "tag", "name": "ApiError", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/utils/errors.py", "pattern": "/^class ApiError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/utils/errors.py", "pattern": "/^    def __init__(self, status: int, message: str, details: Optional[str] = None):$/", "language": "Python", "kind": "member", "signature": "(self, status: int, message: str, details: Optional[str] = None)", "scope": "ApiError", "scopeKind": "class"}, {"_type": "tag", "name": "handle_400", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/utils/errors.py", "pattern": "/^    def handle_400(_):$/", "file": true, "language": "Python", "kind": "function", "signature": "(_)", "scope": "register_error_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "handle_404", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/utils/errors.py", "pattern": "/^    def handle_404(_):$/", "file": true, "language": "Python", "kind": "function", "signature": "(_)", "scope": "register_error_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "handle_api_error", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/utils/errors.py", "pattern": "/^    def handle_api_error(err: ApiError):$/", "file": true, "language": "Python", "kind": "function", "signature": "(err: ApiError)", "scope": "register_error_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "handle_generic", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/utils/errors.py", "pattern": "/^    def handle_generic(err: Exception):$/", "file": true, "language": "Python", "kind": "function", "signature": "(err: Exception)", "scope": "register_error_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "register_error_handlers", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/utils/errors.py", "pattern": "/^def register_error_handlers(app):$/", "language": "Python", "kind": "function", "signature": "(app)"}], "hash": "b14141a492aa3926abc6529208d114c8", "format-version": 4, "code-base-name": "BackendApplication", "filename": "BackendApplication/utils/errors.py", "revision_history": [{"39": ""}]}