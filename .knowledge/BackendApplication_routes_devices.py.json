{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for managing devices, including listing, creating, retrieving, updating, and deleting device records stored in a MongoDB database. It uses Flask for routing and request handling, and relies on data models for validation and serialization.", "external_files": ["utils/errors", "db", "models.device_schema"], "external_methods": ["is_db_available", "get_db"], "published": ["devices_bp"], "classes": [{"name": "DeviceCreate", "description": "Schema for creating a new device, validating input data."}, {"name": "DeviceUpdate", "description": "Schema for updating an existing device, validating input data."}, {"name": "DeviceOut", "description": "Schema for output representation of device data."}], "methods": [{"name": "_require_db()", "description": "Checks if the database is available, raises ApiError if not.", "scope": "", "scopeKind": ""}, {"name": "DeviceOut _to_out(doc)", "description": "Converts a MongoDB document to a DeviceOut schema instance.", "scope": "", "scopeKind": ""}, {"name": "list_devices()", "description": "Handles GET requests to list all devices.", "scope": "", "scopeKind": ""}, {"name": "create_device()", "description": "Handles POST requests to create a new device.", "scope": "", "scopeKind": ""}, {"name": "get_device(id: str)", "description": "Handles GET requests to retrieve a specific device by ID.", "scope": "", "scopeKind": ""}, {"name": "update_device(id: str)", "description": "Handles PUT requests to update an existing device.", "scope": "", "scopeKind": ""}, {"name": "delete_device(id: str)", "description": "Handles DELETE requests to remove a device by ID.", "scope": "", "scopeKind": ""}], "calls": ["is_db_available()", "get_db()", "coll.find()", "coll.insert_one()", "coll.find_one()", "coll.find_one_and_update()", "coll.delete_one()"], "search-terms": ["devices_bp", "DeviceCreate", "DeviceUpdate", "DeviceOut", "MongoDB", "Flask REST API devices"], "state": 2, "file_id": 14, "knowledge_revision": 34, "git_revision": "", "ctags": [{"_type": "tag", "name": "_require_db", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/routes/devices.py", "pattern": "/^def _require_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_to_out", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/routes/devices.py", "pattern": "/^def _to_out(doc) -> DeviceOut:$/", "language": "Python", "typeref": "typename:DeviceOut", "kind": "function", "signature": "(doc)"}, {"_type": "tag", "name": "create_device", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/routes/devices.py", "pattern": "/^def create_device():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "delete_device", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/routes/devices.py", "pattern": "/^def delete_device(id: str):$/", "language": "Python", "kind": "function", "signature": "(id: str)"}, {"_type": "tag", "name": "devices_bp", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/routes/devices.py", "pattern": "/^devices_bp = Blueprint(\"devices\", __name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_device", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/routes/devices.py", "pattern": "/^def get_device(id: str):$/", "language": "Python", "kind": "function", "signature": "(id: str)"}, {"_type": "tag", "name": "list_devices", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/routes/devices.py", "pattern": "/^def list_devices():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "update_device", "path": "/home/kavia/workspace/code-generation/containerized-network-management-6128-5252/BackendApplication/routes/devices.py", "pattern": "/^def update_device(id: str):$/", "language": "Python", "kind": "function", "signature": "(id: str)"}], "hash": "873c82a9dbc895d39cfc38742dad4ce1", "format-version": 4, "code-base-name": "BackendApplication", "filename": "BackendApplication/routes/devices.py", "fields": [{"name": "devices_bp = Blueprint(\"devices\", __name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"34": ""}]}